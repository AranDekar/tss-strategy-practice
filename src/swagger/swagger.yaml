swagger: "2.0"
info:
  version: "1.0.0"
  title: tss-strategy-practice
# during dev, should point to your local machine.
# Note this field is optional.
host: localhost:3510
# basePath prefixes all resource paths
basePath: /api/v1
#
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
  
paths:
  /strategies:
    x-swagger-router-controller: StrategyController
    get:
      tags: 
        - strategy
      summary: Get all strategies
      description: Returns a list of strategies of the strategy owner
      parameters:
        - name: postedBy
          in: query
          type: string
          format: ObjectId
      produces:
        - application/json
      operationId: getStrategies
      responses:
        "200":
          description: A list of strategies
          schema: 
            type: array
            items:
              $ref: "#/definitions/Strategy"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: 
        - strategy
      summary: Create a new Strategy
      description: adds a new strategy owned by strategy owner
      produces:
        - application/json
      operationId: postStrategy
      parameters:
        - name: strategy
          description: the complete strategy object
          in: body
          required: true
          schema:
            $ref: "#/definitions/Strategy"
      responses:
        201:
          description: OK - created successfully
          schema: 
            $ref: "#/definitions/Strategy"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
                      
  /strategies/{strategyId}:
    x-swagger-router-controller: StrategyController
    delete:
      tags: 
        - strategy
      summary: Deletes a strategy
      description: Deletes a strategy
      operationId: deleteStrategy
      parameters:
        - name: strategyId
          in: path
          type: string
          required: true
      responses:
        "204":
          description: Success
          schema:
            $ref: "#/definitions/Strategy"

        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /strategies/{strategyId}/yearly_report:
    x-swagger-router-controller: StrategyController
    get:
      tags: 
        - strategy
      summary: Get a report for a strategy
      description: Get an existing report for a strategy
      operationId: getYearlyReport
      parameters:
        - name: strategyId
          in: path
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema: 
            type: array
            items:
              $ref: "#/definitions/StrategyReportSummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /strategies/{instrument}/{strategyId}/monthly_report:
    x-swagger-router-controller: StrategyController
    get:
      tags: 
        - strategy
      summary: Get a report for a Strategy
      description: Get an existing report for a strategy
      operationId: getMonthlyReport
      parameters:
        - name: strategyId
          in: path
          type: string
          required: true
        - name: instrument
          in: path
          type: string
          required: true
      responses:
        "200":
          description: Success
          schema: 
            type: array
            items:
              $ref: "#/definitions/StrategyReportSummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /strategies/{strategyId}/backtest:
    x-swagger-router-controller: StrategyController
    post:
      tags: 
        - strategy
      summary: Run a backtest
      description: starts backtesting a strategy
      operationId: backtest
      consumes:
        - application/json
      parameters:
        - name: strategyId
          in: path
          type: string
          required: true
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/EventResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /events:
    x-swagger-router-controller: StrategyController
    get:
      tags: 
        - event
      summary: Get all available events
      description: Get all available events
      operationId: getEvents
      responses:
        "200":
          description: Success
          schema: 
            type: array
            items:
              $ref: "#/definitions/Event"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  Strategy:
    type: object
    required:
      - name
      - description
      - postedBy
      - code
      - events
    properties:
      _id:
        type: string
        format: ObjectId
      isActive:
        type: boolean
      name:
        type: string
      description:
        type: string
      postedBy:
        type: string
        format: ObjectId
      createdTime:
        type: string
        format: datetime
      code:
        type: string
        description: the algorithm of the strategy in new strategy this is a moduel in javascript
      events:
        type: "array"
        items:
          type: string
    example:  {
        "isActive": true,
        "_id": "5b235dc32a5bb3001dcb5650",
        "name": "sma",
        "description": "sma testing in h4",
        "postedBy": "5b1f555491c055001d9d10ff",
        "createdTime": "2018-06-15T06:33:39.186Z",
        "code":"module.exports=1",
        "events":["h4_closed"]
    }
  StrategyReportSummary:
    type: object
    required:
      - instrument
      - total
      - maxProfit
      - maxLoss
    properties:
      instrument:
        type: string
      year:
        type: number
        description: this is the year of the report
      total:
        type: number
        description: the algorithm of the strategy in new strategy this is a moduel in javascript
      maxProfit:
        type: number
      maxLoss:
        type: number
      monthly:
        type: array
        items:
          $ref: "#/definitions/MonthlyReport"
      quarterly:
        type: array
        items:
          $ref: "#/definitions/QuarterlyReport"
      halfYearly:
        type: array
        items:
          $ref: "#/definitions/HalfYearlyReport"
  MonthlyReport:
    type: object
    required:
      - total
      - maxProfit
      - maxLoss
      - month
    properties:
      total:
        type: number
      maxProfit:
        type: number
      maxLoss: 
        type: number
      month: 
        type: string      
  QuarterlyReport:
    type: object
    required:
      - total
      - maxProfit
      - maxLoss
      - quarter
    properties:
      total:
        type: number
      maxProfit:
        type: number
      maxLoss: 
        type: number
      quarter: 
        type: string      
  HalfYearlyReport:
    type: object
    required:
      - total
      - maxProfit
      - maxLoss
      - halfYear
    properties:
      total:
        type: number
      maxProfit:
        type: number
      maxLoss: 
        type: number
      halfYear: 
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Event:
    properties:
      name:
        type: string
      description:
        type: string
      howToUse:
        type: string
      payload:
        type: string
      example:
        type: string
  EventResponse:
    required:
      - message
    properties:
      message:
        type: string
